import numpy as np
from trafficSim import *
import csv

sim = Simulation()

n = 20      
a = -2      
b = 12      
l = 300     

NUM_OF_ROADS = 36 
VEHICLE_RATE = 400 
STEPS_PER_UPDATE = 1  



WEST_RIGHT_START = (-b-l, -a)    
WEST_LEFT_START = (-b-l, a)     

SOUTH_RIGHT_START = (-a, b+l)    
SOUTH_LEFT_START = (a, b+l)      

EAST_RIGHT_START = (b+l, a)      
EAST_LEFT_START = (b+l, -a)     

NORTH_RIGHT_START = (a, -b-l)   
NORTH_LEFT_START = (-a, -b-l)    

# Nodi di arrivo 
WEST_RIGHT = (-b, -a)
WEST_LEFT = (-b, a)

SOUTH_RIGHT = (-a, b)
SOUTH_LEFT = (a, b)

EAST_RIGHT = (b, a)
EAST_LEFT = (b, -a)

NORTH_RIGHT = (a, -b)
NORTH_LEFT = (-a, -b)

# Seconda corsia )
WEST_RIGHT_START2 = (WEST_RIGHT_START[0], WEST_RIGHT_START[1] + 4)
WEST_LEFT_START2 = (WEST_LEFT_START[0], WEST_LEFT_START[1] - 4)

SOUTH_RIGHT_START2 = (SOUTH_RIGHT_START[0] + 4, SOUTH_RIGHT_START[1])
SOUTH_LEFT_START2 = (SOUTH_LEFT_START[0] - 4, SOUTH_LEFT_START[1])

EAST_RIGHT_START2 = (EAST_RIGHT_START[0], EAST_RIGHT_START[1] - 4)
EAST_LEFT_START2 = (EAST_LEFT_START[0], EAST_LEFT_START[1] + 4)

NORTH_RIGHT_START2 = (NORTH_RIGHT_START[0] - 4, NORTH_RIGHT_START[1])
NORTH_LEFT_START2 = (NORTH_LEFT_START[0] + 4, NORTH_LEFT_START[1])

# Nodi di arrivo seconda corsia
WEST_RIGHT2 = (WEST_RIGHT[0], WEST_RIGHT[1] + 4)
WEST_LEFT2 = (WEST_LEFT[0], WEST_LEFT[1] - 4)

SOUTH_RIGHT2 = (SOUTH_RIGHT[0] + 4, SOUTH_RIGHT[1])
SOUTH_LEFT2 = (SOUTH_LEFT[0] - 4, SOUTH_LEFT[1])

EAST_RIGHT2 = (EAST_RIGHT[0], EAST_RIGHT[1] - 4)
EAST_LEFT2 = (EAST_LEFT[0], EAST_LEFT[1] + 4)

NORTH_RIGHT2 = (NORTH_RIGHT[0] - 4, NORTH_RIGHT[1])
NORTH_LEFT2 = (NORTH_LEFT[0] + 4, NORTH_LEFT[1])

# Terza corsia 
WEST_RIGHT_START3 = (WEST_RIGHT_START[0], WEST_RIGHT_START[1] + 8)
WEST_LEFT_START3 = (WEST_LEFT_START[0], WEST_LEFT_START[1] - 8)

SOUTH_RIGHT_START3 = (SOUTH_RIGHT_START[0] + 8, SOUTH_RIGHT_START[1])
SOUTH_LEFT_START3 = (SOUTH_LEFT_START[0] - 8, SOUTH_LEFT_START[1])

EAST_RIGHT_START3 = (EAST_RIGHT_START[0], EAST_RIGHT_START[1] - 8)
EAST_LEFT_START3 = (EAST_LEFT_START[0], EAST_LEFT_START[1] + 8)

NORTH_RIGHT_START3 = (NORTH_RIGHT_START[0] - 8, NORTH_RIGHT_START[1])
NORTH_LEFT_START3 = (NORTH_LEFT_START[0] + 8, NORTH_LEFT_START[1])

# Nodi di arrivo terza corsia
WEST_RIGHT3 = (WEST_RIGHT[0], WEST_RIGHT[1] + 8)
WEST_LEFT3 = (WEST_LEFT[0], WEST_LEFT[1] - 8)

SOUTH_RIGHT3 = (SOUTH_RIGHT[0] + 8, SOUTH_RIGHT[1])
SOUTH_LEFT3 = (SOUTH_LEFT[0] - 8, SOUTH_LEFT[1])

EAST_RIGHT3 = (EAST_RIGHT[0], EAST_RIGHT[1] - 8)
EAST_LEFT3 = (EAST_LEFT[0], EAST_LEFT[1] + 8)

NORTH_RIGHT3 = (NORTH_RIGHT[0] - 8, NORTH_RIGHT[1])
NORTH_LEFT3 = (NORTH_LEFT[0] + 8, NORTH_LEFT[1])

# Strade principali
WEST_INBOUND = (WEST_RIGHT_START, WEST_RIGHT)
SOUTH_INBOUND = (SOUTH_RIGHT_START, SOUTH_RIGHT)
EAST_INBOUND = (EAST_RIGHT_START, EAST_RIGHT)
NORTH_INBOUND = (NORTH_RIGHT_START, NORTH_RIGHT)

WEST_OUTBOUND = (WEST_LEFT, WEST_LEFT_START)
SOUTH_OUTBOUND = (SOUTH_LEFT, SOUTH_LEFT_START)
EAST_OUTBOUND = (EAST_LEFT, EAST_LEFT_START)
NORTH_OUTBOUND = (NORTH_LEFT, NORTH_LEFT_START)

WEST_STRAIGHT = (WEST_RIGHT, EAST_LEFT)
SOUTH_STRAIGHT = (SOUTH_RIGHT, NORTH_LEFT)
EAST_STRAIGHT = (EAST_RIGHT, WEST_LEFT)
NORTH_STRAIGHT = (NORTH_RIGHT, SOUTH_LEFT)

# Curve 
WEST_RIGHT_TURN = turn_road(WEST_RIGHT, NORTH_LEFT, TURN_LEFT, n)  
WEST_LEFT_TURN = turn_road(WEST_RIGHT, SOUTH_LEFT, TURN_RIGHT, n)   

SOUTH_RIGHT_TURN = turn_road(SOUTH_RIGHT, WEST_LEFT, TURN_LEFT, n)
SOUTH_LEFT_TURN = turn_road(SOUTH_RIGHT, EAST_LEFT, TURN_RIGHT, n)

EAST_RIGHT_TURN = turn_road(EAST_RIGHT, SOUTH_LEFT, TURN_LEFT, n)
EAST_LEFT_TURN = turn_road(EAST_RIGHT, NORTH_LEFT, TURN_RIGHT, n)

NORTH_RIGHT_TURN = turn_road(NORTH_RIGHT, EAST_LEFT, TURN_LEFT, n)
NORTH_LEFT_TURN = turn_road(NORTH_RIGHT, WEST_LEFT, TURN_RIGHT, n)

# Strade secondarie 
WEST_INBOUND2 = (WEST_RIGHT_START2, WEST_RIGHT2)
SOUTH_INBOUND2 = (SOUTH_RIGHT_START2, SOUTH_RIGHT2)
EAST_INBOUND2 = (EAST_RIGHT_START2, EAST_RIGHT2)
NORTH_INBOUND2 = (NORTH_RIGHT_START2, NORTH_RIGHT2)

WEST_OUTBOUND2 = (WEST_LEFT2, WEST_LEFT_START2)
SOUTH_OUTBOUND2 = (SOUTH_LEFT2, SOUTH_LEFT_START2)
EAST_OUTBOUND2 = (EAST_LEFT2, EAST_LEFT_START2)
NORTH_OUTBOUND2 = (NORTH_LEFT2, NORTH_LEFT_START2)

WEST_STRAIGHT2 = (WEST_RIGHT2, EAST_LEFT2)
SOUTH_STRAIGHT2 = (SOUTH_RIGHT2, NORTH_LEFT2)
EAST_STRAIGHT2 = (EAST_RIGHT2, WEST_LEFT2)
NORTH_STRAIGHT2 = (NORTH_RIGHT2, SOUTH_LEFT2)

WEST_RIGHT_TURN2 = turn_road(WEST_RIGHT2, NORTH_LEFT2, TURN_LEFT, n)
WEST_LEFT_TURN2 = turn_road(WEST_RIGHT2, SOUTH_LEFT2, TURN_RIGHT, n)

SOUTH_RIGHT_TURN2 = turn_road(SOUTH_RIGHT2, WEST_LEFT2, TURN_LEFT, n)
SOUTH_LEFT_TURN2 = turn_road(SOUTH_RIGHT2, EAST_LEFT2, TURN_RIGHT, n)

EAST_RIGHT_TURN2 = turn_road(EAST_RIGHT2, SOUTH_LEFT2, TURN_LEFT, n)
EAST_LEFT_TURN2 = turn_road(EAST_RIGHT2, NORTH_LEFT2, TURN_RIGHT, n)

NORTH_RIGHT_TURN2 = turn_road(NORTH_RIGHT2, EAST_LEFT2, TURN_LEFT, n)
NORTH_LEFT_TURN2 = turn_road(NORTH_RIGHT2, WEST_LEFT2, TURN_RIGHT, n)

# Strade terziarie
WEST_INBOUND3 = (WEST_RIGHT_START3, WEST_RIGHT3)
SOUTH_INBOUND3 = (SOUTH_RIGHT_START3, SOUTH_RIGHT3)
EAST_INBOUND3 = (EAST_RIGHT_START3, EAST_RIGHT3)
NORTH_INBOUND3 = (NORTH_RIGHT_START3, NORTH_RIGHT3)

WEST_OUTBOUND3 = (WEST_LEFT3, WEST_LEFT_START3)
SOUTH_OUTBOUND3 = (SOUTH_LEFT3, SOUTH_LEFT_START3)
EAST_OUTBOUND3 = (EAST_LEFT3, EAST_LEFT_START3)
NORTH_OUTBOUND3 = (NORTH_LEFT3, NORTH_LEFT_START3)

WEST_STRAIGHT3 = (WEST_RIGHT3, EAST_LEFT3)
SOUTH_STRAIGHT3 = (SOUTH_RIGHT3, NORTH_LEFT3)
EAST_STRAIGHT3 = (EAST_RIGHT3, WEST_LEFT3)
NORTH_STRAIGHT3 = (NORTH_RIGHT3, SOUTH_LEFT3)

WEST_RIGHT_TURN3 = turn_road(WEST_RIGHT3, NORTH_LEFT3, TURN_LEFT, n)
WEST_LEFT_TURN3 = turn_road(WEST_RIGHT3, SOUTH_LEFT3, TURN_RIGHT, n)

SOUTH_RIGHT_TURN3 = turn_road(SOUTH_RIGHT3, WEST_LEFT3, TURN_LEFT, n)
SOUTH_LEFT_TURN3 = turn_road(SOUTH_RIGHT3, EAST_LEFT3, TURN_RIGHT, n)

EAST_RIGHT_TURN3 = turn_road(EAST_RIGHT3, SOUTH_LEFT3, TURN_LEFT, n)
EAST_LEFT_TURN3 = turn_road(EAST_RIGHT3, NORTH_LEFT3, TURN_RIGHT, n)

NORTH_RIGHT_TURN3 = turn_road(NORTH_RIGHT3, EAST_LEFT3, TURN_LEFT, n)
NORTH_LEFT_TURN3 = turn_road(NORTH_RIGHT3, WEST_LEFT3, TURN_RIGHT, n)

# ====================== CREAZIONE STRADE ======================
sim.create_roads([
    WEST_INBOUND, SOUTH_INBOUND, EAST_INBOUND, NORTH_INBOUND,
    WEST_OUTBOUND, SOUTH_OUTBOUND, EAST_OUTBOUND, NORTH_OUTBOUND,
    WEST_STRAIGHT, SOUTH_STRAIGHT, EAST_STRAIGHT, NORTH_STRAIGHT,

    # Seconda corsia
    WEST_INBOUND2, SOUTH_INBOUND2, EAST_INBOUND2, NORTH_INBOUND2,
    WEST_OUTBOUND2, SOUTH_OUTBOUND2, EAST_OUTBOUND2, NORTH_OUTBOUND2,
    WEST_STRAIGHT2, SOUTH_STRAIGHT2, EAST_STRAIGHT2, NORTH_STRAIGHT2,

    # Terza corsia
    WEST_INBOUND3, SOUTH_INBOUND3, EAST_INBOUND3, NORTH_INBOUND3,
    WEST_OUTBOUND3, SOUTH_OUTBOUND3, EAST_OUTBOUND3, NORTH_OUTBOUND3,
    WEST_STRAIGHT3, SOUTH_STRAIGHT3, EAST_STRAIGHT3, NORTH_STRAIGHT3,

    # Curve 
    *WEST_RIGHT_TURN, *WEST_LEFT_TURN,
    *SOUTH_RIGHT_TURN, *SOUTH_LEFT_TURN,
    *EAST_RIGHT_TURN, *EAST_LEFT_TURN,
    *NORTH_RIGHT_TURN, *NORTH_LEFT_TURN,

    *WEST_RIGHT_TURN2, *WEST_LEFT_TURN2,
    *SOUTH_RIGHT_TURN2, *SOUTH_LEFT_TURN2,
    *EAST_RIGHT_TURN2, *EAST_LEFT_TURN2,
    *NORTH_RIGHT_TURN2, *NORTH_LEFT_TURN2,

    *WEST_RIGHT_TURN3, *WEST_LEFT_TURN3,
    *SOUTH_RIGHT_TURN3, *SOUTH_LEFT_TURN3,
    *EAST_RIGHT_TURN3, *EAST_LEFT_TURN3,
    *NORTH_RIGHT_TURN3, *NORTH_LEFT_TURN3
])

# ====================== GENERAZIONE VEICOLI ======================
def road(a): return range(a, a+n)

sim.create_gen({
    'vehicle_rate': VEHICLE_RATE,
    'vehicles': [
        # 1a corsia
        [2, {'path': [0, 8, 6]}],  # West → East
        [2, {'path': [0, *road(NUM_OF_ROADS), 5]}],  # West → North (svolta destra)
        
        [2, {'path': [1, 9, 7]}],  # South → North
        [2, {'path': [1, *road(NUM_OF_ROADS+2*n), 6]}],  # South → West 
        
        [3, {'path': [2, 10, 4]}],  # East → West
        [3, {'path': [2, *road(NUM_OF_ROADS+4*n), 7]}],  # East → South 
        
        [3, {'path': [3, 11, 5]}],  # North → South
        [3, {'path': [3, *road(NUM_OF_ROADS+6*n), 4]}],  # North → East 

        # 2a corsia 
        [2, {'path': [12, 20, 18]}],
        [2, {'path': [12, *road(NUM_OF_ROADS+9*n), 19]}],

        [2, {'path': [13, 21, 19]}],
        [2, {'path': [13, *road(NUM_OF_ROADS+11*n), 16]}],

        [3, {'path': [14, 22, 16]}],
        [3, {'path': [14, *road(NUM_OF_ROADS+13*n), 17]}],

        [3, {'path': [15, 23, 17]}],
        [3, {'path': [15, *road(NUM_OF_ROADS+15*n), 18]}],

        # Veicoli aggiuntivi
        [3, {'path': [24, *road(NUM_OF_ROADS+17*n), 31]}],
        [3, {'path': [25, *road(NUM_OF_ROADS+19*n), 28]}],
        [4, {'path': [26, *road(NUM_OF_ROADS+21*n), 29]}],
        [4, {'path': [27, *road(NUM_OF_ROADS+23*n), 30]}]
    ]
})

# ====================== SEMAFORI ======================
sim.create_signal([
    [0, 2],  # West-East
    [1, 3]   # South-North
])

sim.create_signal([
    [12, 14],  # West-East (2a corsia)
    [13, 15]   # South-North (2a corsia)
])

# ====================== AVVIO SIMULAZIONE ======================
win = Window(sim)
win.zoom = 10
if not sim.isPaused:
    win.run(steps_per_update=STEPS_PER_UPDATE)